name: Build and publish
on:
  push:
    tags-ignore:
      - "*.*"
    branches:
      - main
      - feat/**

jobs:
  build_go_binary_and_release:
    name: Build go binary and release
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18

      - name: Build Ticket Action
        working-directory: ./ticket
        shell: bash
        run: |
          env GOOS=linux GOARCH=amd64 go build -o dist/linux
          env GOOS=windows GOARCH=amd64 go build -o dist/windows
          env GOOS=darwin GOARCH=amd64 go build -o dist/macos

      - name: "Update Versions"
        uses: paulhatch/semantic-version@v4.0.3
        id: versioning
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "${major}.${minor}.${patch}"
          change_path: "cmd/verathread internal pkg deployments scripts"
          namespace: ""
          bump_each_commit: true
          short_tags: false

      - name: Create tag
        run: |
          git config --global user.email "${{ github.event.pusher.email }}"
          git config --global user.name "${{ github.event.pusher.name }}"
          git add .
          git commit -m 'release: ${{ steps.versioning.outputs.version }}'
          git tag v${{ steps.versioning.outputs.version }}
          git push origin --tags
#          MAJOR_TAG=$(echo "${{ steps.versioning.outputs.version }}" | sed "s/\..*//")
#          git tag $MAJOR_TAG -f -a -m "Update tag with version ${{ steps.versioning.outputs.version }}"
#          git push origin tag $MAJOR_TAG --force

      - name: "Build Changelog"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v3.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.versioning.outputs.version }}
          release_name: v${{ steps.versioning.outputs.version }}
          body: ${{ steps.build_changelog.outputs.changelog }}
          draft: false
          prerelease: false
